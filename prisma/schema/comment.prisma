model Comment {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  boardId String @map("board_id") @db.Uuid
  num     BigInt @db.BigInt

  createdAt DateTime @map("created_at")

  isAdmin          Boolean   @default(false) @map("is_admin") @db.Boolean
  ip               String    @db.VarChar(64)
  name             String    @db.VarChar(256)
  tripcode         String?   @db.VarChar(256)
  email            String?   @db.VarChar(256)
  subject          String?   @db.VarChar(256)
  comment          String    @db.Text
  password         String    @db.VarChar(8)
  lastHit          DateTime? @map("last_hit")
  hasSage          Boolean   @map("has_sage") @db.Boolean
  pinnedAt         DateTime? @map("pinned_at")
  isPostingEnabled Boolean   @default(true) @map("is_posting_enabled")

  attachedFileId String?       @map("attached_file_id") @db.Uuid
  attachedFile   AttachedFile? @relation(fields: [attachedFileId], references: [id], onDelete: SetNull)

  board Board @relation(fields: [boardId], references: [id], onDelete: Cascade)

  parentId String?   @map("parent_id") @db.Uuid
  parent   Comment?  @relation(fields: [parentId], references: [id], onDelete: Cascade, name: "parent_to_children")
  children Comment[] @relation("parent_to_children")

  @@unique([boardId, num])
  @@map("comment")
}
